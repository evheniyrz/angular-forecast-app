/*! coi-serviceworker v0.1.7 - Guido Zuidhof and contributors, licensed under MIT */let coepCredentialless=!1;typeof window>"u"?(self.addEventListener("install",()=>self.skipWaiting()),self.addEventListener("activate",r=>r.waitUntil(self.clients.claim())),self.addEventListener("message",r=>{r.data&&(r.data.type==="deregister"?self.registration.unregister().then(()=>self.clients.matchAll()).then(s=>{s.forEach(e=>e.navigate(e.url))}):r.data.type==="coepCredentialless"&&(coepCredentialless=r.data.value))}),self.addEventListener("fetch",function(r){const s=r.request;if(s.cache==="only-if-cached"&&s.mode!=="same-origin")return;const e=coepCredentialless&&s.mode==="no-cors"?new Request(s,{credentials:"omit"}):s;r.respondWith(fetch(e).then(o=>{if(o.status===0)return o;const i=new Headers(o.headers);return i.set("Cross-Origin-Embedder-Policy",coepCredentialless?"credentialless":"require-corp"),coepCredentialless||i.set("Cross-Origin-Resource-Policy","cross-origin"),i.set("Cross-Origin-Opener-Policy","same-origin"),new Response(o.body,{status:o.status,statusText:o.statusText,headers:i})}).catch(o=>console.error(o)))})):(()=>{const r=window.sessionStorage.getItem("coiReloadedBySelf");window.sessionStorage.removeItem("coiReloadedBySelf");const s=r=="coepdegrade",e={shouldRegister:()=>!r,shouldDeregister:()=>!1,coepCredentialless:()=>!0,coepDegrade:()=>!0,doReload:()=>window.location.reload(),quiet:!1,...window.coi},o=navigator,i=o.serviceWorker&&o.serviceWorker.controller;i&&!window.crossOriginIsolated&&window.sessionStorage.setItem("coiCoepHasFailed","true");const n=window.sessionStorage.getItem("coiCoepHasFailed");if(i){const t=e.coepDegrade()&&!(s||window.crossOriginIsolated);o.serviceWorker.controller.postMessage({type:"coepCredentialless",value:!(t||n&&e.coepDegrade())&&e.coepCredentialless()}),t&&(!e.quiet&&console.log("Reloading page to degrade COEP."),window.sessionStorage.setItem("coiReloadedBySelf","coepdegrade"),e.doReload("coepdegrade")),e.shouldDeregister()&&o.serviceWorker.controller.postMessage({type:"deregister"})}window.crossOriginIsolated===!1&&e.shouldRegister()&&(window.isSecureContext?o.serviceWorker?o.serviceWorker.register(window.document.currentScript.src).then(t=>{!e.quiet&&console.log("COOP/COEP Service Worker registered",t.scope),t.addEventListener("updatefound",()=>{!e.quiet&&console.log("Reloading page to make use of updated COOP/COEP Service Worker."),window.sessionStorage.setItem("coiReloadedBySelf","updatefound"),e.doReload()}),t.active&&!o.serviceWorker.controller&&(!e.quiet&&console.log("Reloading page to make use of COOP/COEP Service Worker."),window.sessionStorage.setItem("coiReloadedBySelf","notcontrolling"),e.doReload())},t=>{!e.quiet&&console.error("COOP/COEP Service Worker failed to register:",t)}):!e.quiet&&console.error("COOP/COEP Service Worker not registered, perhaps due to private mode."):!e.quiet&&console.log("COOP/COEP Service Worker not registered, a secure context is required."))})();
